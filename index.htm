<html>
<head>

  <link rel="stylesheet" href="/assets/uikit/uikit/dist/css/uikit.min.css" />
  <script src="/assets/uikit/uikit/dist/js/uikit.min.js"></script>
  <script src="/assets/uikit/uikit/dist/js/uikit-icons.min.js"></script>

  <script src="/assets/enyo/dropzone/dist/min/dropzone.min.js"></script>
  <link href="/assets/enyo/dropzone/dist/min/dropzone.min.css" rel="stylesheet" type="text/css" />

</head>

<body>

  <div class="uk-padding-large uk-container ">
  <h1>Dropload</h1>

  <form action="upload.php" class="uk-form-stacked dropzone" method="post" enctype="multipart/form-data" id="dropper">
    <div class="uk-margin">
        <label class="uk-form-label" for="form-stacked-text">Uploader</label>
        <input class="uk-input" type="text" placeholder="Name of Reference to uploader" name="uploader">
    </div>
    <div class="uk-margin">
        <label class="uk-form-label" for="form-stacked-text">Event / Title</label>
        <input class="uk-input" type="text" placeholder="Title of the event or alike" name="title">
    </div>
    <div class="uk-margin">
        <label class="uk-form-label" for="form-stacked-text">Maximum width/height for images (leave empty to not resize)</label>
        <input class="uk-input" type="number" min="0" placeholder="Resize images - leave empty to not resize" id="resizeto" name="resizeto">
    </div>
  </form>

<script>

  Dropzone.options.dropper = {

    resizeHeight:1,

    resize: function resize (file, width, height, resizeMethod) {

      var newsize = document.getElementById("resizeto").value;

      if (!newsize)
        newsize = 1000000;

      width = newsize;
      height = newsize;

      console.log("resizing" + width + "*" + height);

      var info = {
        srcX: 0,
        srcY: 0,
        srcWidth: file.width,
        srcHeight: file.height
      };
      var srcRatio = file.width / file.height; // Automatically calculate dimensions if not specified

      if (width == null && height == null) {
        width = info.srcWidth;
        height = info.srcHeight;
      } else if (width == null) {
        width = height * srcRatio;
      } else if (height == null) {
        height = width / srcRatio;
      } // Make sure images aren't upscaled


      width = Math.min(width, info.srcWidth);
      height = Math.min(height, info.srcHeight);
      var trgRatio = width / height;

      if (info.srcWidth > width || info.srcHeight > height) {
        // Image is bigger and needs rescaling
        if (resizeMethod === "crop") {
          if (srcRatio > trgRatio) {
            info.srcHeight = file.height;
            info.srcWidth = info.srcHeight * trgRatio;
          } else {
            info.srcWidth = file.width;
            info.srcHeight = info.srcWidth / trgRatio;
          }
        } else if (resizeMethod === "contain") {
          // Method 'contain'
          if (srcRatio > trgRatio) {
            height = width / srcRatio;
          } else {
            width = height * srcRatio;
          }
        } else {
          throw new Error("Unknown resizeMethod '".concat(resizeMethod, "'"));
        }
      }

      info.srcX = (file.width - info.srcWidth) / 2;
      info.srcY = (file.height - info.srcHeight) / 2;
      info.trgWidth = width;
      info.trgHeight = height;
      return info;
    }


};


</script>

  </div>

</body>
</html>
